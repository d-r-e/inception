version: "3.8"

services:
  nginx:
    networks:
      - inception
    container_name: nginx
    build:
      context: requirements/nginx/
      args:
        CERTS: "${CERTS}"
        DEBIAN_VERSION: ${DEBIAN_VERSION}
    restart: always
    ports:
      - 443:443
    volumes:
      - type: bind
        source: ./requirements/nginx/conf/nginx.conf
        target: /etc/nginx/nginx.conf
      - wpdata:/var/www/html:ro
    depends_on:
      - wordpress
      - mariadb
  # webtest:
  #   build: requirements/test/
  #   image: webtest
  #   container_name: webtest
  #   networks:
  #     - inception

  mariadb:
    container_name: $DB_HOST
    restart: always
    build:
      context: requirements/mariadb/
      args:
        MSQL_ADMIN: ${MSQL_ADMIN}
        MSQL_PW: ${MSQL_PW}
        DB_NAME: ${DB_NAME}
        DEBIAN_VERSION: ${DEBIAN_VERSION}
    volumes: 
      - dbdata:$HOME/data/dbdata:/var/lib/mysql
    networks: 
      - inception
    env_file: .env
  

  debian:
    container_name: debian
    build: requirements/test/
    image: debian:buster
    networks:
      - inception
    command: ['tail','-f','/dev/null']


  wordpress:
    container_name: wordpress
    networks:
      - inception
    restart: always
    build:
      context: requirements/wordpress/
      args:
        MSQL_ADMIN: ${MSQL_ADMIN}
        MSQL_PW: ${MSQL_PW}
        DB_NAME: ${DB_NAME}
        DB_HOST: ${DB_HOST}
        DEBIAN_VERSION: ${DEBIAN_VERSION}
        WP_URL: ${WP_URL}
        WP_TITLE: ${WP_TITLE}
        WP_ADMIN: ${WP_ADMIN}
        WP_PASS: ${WP_PASS}
        WP_MAIL: ${WP_MAIL}
    env_file:
      - .env
    volumes:
      - wpdata:/var/www/html
      # - type: bind
      #   source: ./wpdata
      #   target: /var/www/html

    depends_on:
      - mariadb
    # tty: true

networks:
  inception:
    name: inception

volumes:
  dbdata:
    name: dbdata
  wpdata:
    name: wpdata
    